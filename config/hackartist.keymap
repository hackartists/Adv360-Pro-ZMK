#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/stp.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/pointing.h>

#define DEFAULT 0
#define MISC 1
#define MAC 2
#define DVORAK 3
#define NUM 4
#define HWP 5

/ {
    behaviors {
      #include "macros.dtsi"

      hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <150>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };
      hwp_caption: macro_hwp_caption {
        compatible = "zmk,behavior-macro";
        label = "hwp_caption";
        #binding-cells = <0>;
        bindings
          = <&macro_press &kp LCTRL>
          , <&macro_tap &kp N>
          , <&macro_tap &kp C>
          , <&macro_release &kp LCTRL>;
      };
    };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      display-name = "Base";
      bindings = <
        &kp EQUAL &kp N1    &kp N2    &kp N3   &kp N4     &kp N5 &mo MISC                                                         &mo MISC       &kp N6   &kp N7   &kp N8    &kp N9   &kp N0   &kp MINUS
        &kp TAB   &kp Q     &kp W     &kp E    &kp R      &kp T  &kp DEL                                                          &kp LA(SPACE)  &kp Y    &kp U    &kp I     &kp O    &kp P    &kp BSLH
        &kp ESC   &kp A     &kp S     &kp D    &kp F      &kp G  &kp LC(SPACE)     &kp LCTRL     &kp LCMD  &kp LCMD  &kp LCTRL    &kp LC(SPACE)  &kp H    &kp J    &kp K     &kp L    &kp SEMI &kp SQT
        &kp LSHFT &kp Z     &kp X     &kp C    &kp V      &kp B                                  &kp HOME  &kp END                               &kp N    &kp M    &kp COMMA &kp DOT  &kp FSLH &kp LSHFT
        &trans    &kp GRAVE &kp LA(X) &kp LEFT &kp RIGHT                 &kp SPACE &kp LS(SPACE) &kp LALT  &kp LALT  &kp BSPC  &kp ENTER                  &kp DOWN &kp UP    &kp LBKT &kp RBKT &trans
      >;
    };

    mod_layer {
      bindings = <
        &none  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans                                                     &trans      &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans
        &trans &kp F1       &kp F2       &kp F3       &kp F4       &to DEFAULT  &bootloader                                                &bootloader &to DEFAULT  &kp F1       &kp F2       &kp F3       &kp F4       &trans
        &trans &kp F5       &kp F6       &kp F7       &kp F8       &to MAC      &bt BT_CLR          &trans &trans    &trans &trans         &bt BT_CLR  &to MAC      &kp F5       &kp F6       &kp F7       &kp F8       &trans
        &trans &kp F9       &kp F10      &kp F11      &kp F12      &to HWP                                 &trans    &trans                            &trans       &kp F9       &kp F10      &kp F11      &kp F12      &trans
        &trans &trans       &trans       &bl BL_INC   &bl BL_DEC                             &trans &trans &trans    &trans &trans &trans                           &bl BL_INC   &bl BL_DEC   &trans       &trans       &trans
      >;
    };

    mac_layer {
        bindings = <
        &kp EQUAL     &kp N1    &kp N2    &kp N3   &kp N4  &kp N5 &to DEFAULT                                                          &to DEFAULT   &kp N6 &kp N7   &kp N8    &kp N9   &kp N0   &kp MINUS
        &kp TAB       &kp Q     &kp W     &kp E    &kp R   &kp T  &to DEFAULT                                                          &to DEFAULT   &kp Y  &kp U    &kp I     &kp O    &kp P    &kp BSLH
        &kp ESC       &kp A     &kp S     &kp D    &kp F   &kp G  &kp LA(SPACE)            &kp LCMD &kp LCTRL &kp LCTRL &kp LCMD       &kp LC(SPACE) &kp H  &kp J    &kp K     &kp L    &kp SEMI &kp SQT
        &kp LSHFT     &kp Z     &kp X     &kp C    &kp V   &kp B                                    &kp HOME  &kp END                                &kp N  &kp M    &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
        &kp LA(LSHFT) &kp GRAVE &kp LA(X) &kp LEFT &kp RIGHT             &kp SPACE &kp LS(SPACE)    &kp LALT  &kp LALT  &kp BSPC  &kp ENTER                 &kp DOWN &kp UP    &kp LBKT &kp RBKT &kp LC(LSHFT)
        >;
    };

    dvorak_layer {
        bindings = <
        &kp EQUAL     &kp N1    &kp N2    &kp N3   &kp N4 &kp N5 &to DEFAULT                                                      &to DEFAULT         &kp N6 &kp N7   &kp N8 &kp N9   &kp N0   &kp MINUS
        &kp TAB       &kp SQT   &kp COMMA &kp DOT  &kp P  &kp Y  &to DEFAULT                                                      &to DEFAULT   &kp F  &kp G    &kp C  &kp R    &kp L    &kp BSLH
        &kp ESC       &kp A     &kp O     &kp E    &kp U  &kp I  &kp LA(SPACE)           &kp LCTRL &kp LCMD &kp LCMD &kp LCTRL    &kp LC(SPACE) &kp D  &kp H    &kp T  &kp N    &kp S    &kp FSLH
        &kp LSHFT     &kp SEMI  &kp Q     &kp J    &kp K  &kp X                                    &kp HOME &kp END                             &kp B  &kp M    &kp W  &kp V    &kp Z    &kp RSHFT
        &kp LA(LSHFT) &kp GRAVE &kp LA(X) &kp LEFT &kp RIGHT             &kp SPACE &kp LS(SPACE)    &kp LALT  &kp LALT  &kp BSPC  &kp ENTER            &kp DOWN &kp UP &kp LBKT &kp RBKT &kp LC(LSHFT)
        >;
    };

    keypad {
      bindings = <
        &kp EQUAL &kp N1    &kp N2   &kp N3   &kp N4     &kp N5 &to DEFAULT                                          &to DEFAULT &kp N6 &kp KP_NUM &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &kp MINUS
        &kp TAB   &kp Q     &kp W    &kp E    &kp R      &kp T  &to DEFAULT                                          &to DEFAULT &kp Y  &kp KP_N7  &kp KP_N8    &kp KP_N9     &kp KP_MINUS    &kp BSLH
        &kp ESC   &kp A     &kp S    &kp D    &kp F      &kp G  &none    &kp LCTRL &kp LALT  &kp LGUI  &kp RCTRL     &none       &kp H  &kp KP_N4  &kp KP_N5    &kp KP_N6     &kp KP_PLUS     &kp SQT
        &kp LSHFT &kp Z     &kp X    &kp C    &kp V      &kp B                     &kp HOME  &kp PG_UP                           &kp N  &kp KP_N1  &kp KP_N2    &kp KP_N3     &kp KP_ENTER    &kp RSHFT
        &mo 2     &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT         &kp BSPC &kp DEL   &kp END   &kp PG_DN &kp ENTER &kp KP_N0              &kp UP     &kp DOWN     &kp KP_DOT    &kp RBKT        &mo 2
      >;
    };

    hwp_layer {
        bindings = <
        &kp EQUAL     &mt LC(N6) LC(N1)  &mt LC(N7) LC(N2) &mt LC(N8) LC(N3) &mt LC(N9) LC(N4)  &mt LC(N0) LC(N5) &to DEFAULT                                                            &to DEFAULT      &kp N6 &kp N7   &kp N8    &kp N9   &kp N0   &kp MINUS
        &kp ENTER     &hwp_caption       &kp LA(LS(N))     &kp LA(LS(W))     &kp LC(F2)         &kp LA(T)         &kp DEL                                                                &none         &kp Y  &kp U    &kp I     &kp O    &kp P    &kp BSLH
        &kp ESC       &kp LC(A)          &kp LC(LS(L))     &kp LC(LS(C))     &kp LC(LS(R))      &kp LC(UP)        &kp LA(SPACE)          &kp LCMD &kp LCTRL &kp LCTRL &kp LCMD       &kp LC(SPACE) &kp H  &kp J    &kp K     &kp L    &kp SEMI &kp SQT
        &kp LSHFT     &kp LA(C)          &kp LC(X)         &mt LA(C) LC(C)   &kp LC(V)          &kp LC(DOWN)                             &kp HOME  &kp END                                &kp N  &kp M    &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
        &kp LA(LSHFT) &kp GRAVE          &kp LA(X)         &kp LEFT          &kp RIGHT                            &kp F5 &kp LS(SPACE)   &kp LALT  &kp LALT  &kp BSPC  &kp ENTER                 &kp DOWN &kp UP    &kp LBKT &kp RBKT &kp LC(LSHFT)
        >;
    };

  };
};
